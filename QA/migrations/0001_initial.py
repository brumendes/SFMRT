# Generated by Django 2.1.2 on 2018-11-21 16:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Acelerador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=20, unique=True, verbose_name='Nome')),
                ('nserie', models.CharField(max_length=10, verbose_name='Número de Série')),
                ('modelo', models.CharField(max_length=10, verbose_name='Modelo')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Aceleradores',
            },
        ),
        migrations.CreateModel(
            name='Condicao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(blank=True, choices=[('Electrões', 'Electrões'), ('Fotões', 'Fotões')], max_length=20)),
                ('gantry', models.FloatField(help_text='Ângulo de inclinição da Gantry.')),
                ('dfp', models.FloatField(help_text='Distância Foco-pele em cm.')),
                ('campo', models.CharField(choices=[('5x5', '5x5'), ('8x8', '8x8'), ('10x10', '10x10'), ('12x12', '12x12'), ('15x15', '15x15'), ('20x20', '20x20'), ('25x25', '25x25')], help_text='Tamanho de campo em cm2', max_length=10)),
                ('cone', models.CharField(blank=True, choices=[('10x10', '10x10'), ('15x15', '15x15'), ('20x20', '20x20'), ('25x25', '25x25')], help_text='Só para electrões', max_length=10)),
                ('dose', models.FloatField(help_text='Dose em MU')),
                ('colimador', models.FloatField(help_text='Posição do colimador.')),
                ('pmma', models.FloatField(help_text='Espessura de placas de PMMA em mm (só para fotões).')),
                ('notas', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Condição',
                'verbose_name_plural': 'Condições',
            },
        ),
        migrations.CreateModel(
            name='Energia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=20, unique=True, verbose_name='Designação')),
                ('tipo', models.CharField(choices=[('Electrões', 'Electrões'), ('Fotões', 'Fotões')], max_length=20)),
                ('valor', models.IntegerField(help_text='Valor nominal da energia (MV - fotões; MeV - electrões).')),
                ('obs', models.CharField(blank=True, help_text='Exemplo: SRS', max_length=50, null=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fabricante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fabricante', models.CharField(max_length=20, verbose_name='Fabricante')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Medida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.FloatField()),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('energia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='QA.Energia')),
            ],
        ),
        migrations.CreateModel(
            name='Referencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utilizador', models.CharField(max_length=30)),
                ('valor', models.FloatField(help_text='Introduza o valor de referência para as condições de medida seleccionadas.')),
                ('data', models.DateField()),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('acelerador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referencias_acelerador', to='QA.Acelerador')),
                ('energia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referencias', to='QA.Energia')),
            ],
            options={
                'verbose_name': 'Referência',
                'verbose_name_plural': 'Referências',
                'get_latest_by': 'data',
            },
        ),
        migrations.CreateModel(
            name='Registo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('autor', models.CharField(max_length=50, verbose_name='Realizado por:')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('acelerador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registos', to='QA.Acelerador')),
            ],
            options={
                'ordering': ['-data'],
                'get_latest_by': 'data',
            },
        ),
        migrations.CreateModel(
            name='Verificacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dfp', models.CharField(choices=[('X', 'X'), ('V', 'V')], max_length=10, verbose_name='DFP')),
                ('lasers', models.CharField(choices=[('X', 'X'), ('V', 'V')], max_length=10, verbose_name='Lasers')),
                ('campo', models.CharField(choices=[('X', 'X'), ('V', 'V')], max_length=10, verbose_name='Tamanho de campo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('registo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verificacao', to='QA.Registo')),
            ],
            options={
                'verbose_name': 'Verificação',
                'verbose_name_plural': 'Verificações',
            },
        ),
        migrations.AddField(
            model_name='medida',
            name='referencia',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ref_medidas', to='QA.Referencia'),
        ),
        migrations.AddField(
            model_name='medida',
            name='registo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medidas', to='QA.Registo'),
        ),
        migrations.AlterUniqueTogether(
            name='energia',
            unique_together={('tipo', 'valor', 'obs')},
        ),
        migrations.AddField(
            model_name='acelerador',
            name='energias',
            field=models.ManyToManyField(related_name='aceleradores', to='QA.Energia'),
        ),
        migrations.AddField(
            model_name='acelerador',
            name='fabricante',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='QA.Fabricante'),
        ),
    ]
